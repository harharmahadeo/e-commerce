import { writeFileSync } from "fs";
import { dedent } from "tslint/lib/utils";

// https://stackoverflow.com/questions/42155115/how-to-include-git-revision-into-angular-cli-application

const util = require("util");
const exec = util.promisify(require("child_process").exec);

async function createVersionsFile(filename: string, filename2: string) {
  const [revision, branch] = await Promise.all([
    exec("git rev-parse --short HEAD").then(r => r.stdout.toString().trim()),
    exec("git rev-parse --abbrev-ref HEAD").then(r => r.stdout.toString().trim())
  ]);

  console.log(`revision: '${revision}', branch: '${branch}'`);

  const content = dedent`
      // this file is automatically generated by git.version.ts script
      export const app_version = "${branch} ${revision}";`;

  writeFileSync(filename, content, { encoding: "utf8" });

  const content2 = dedent`
      using System.Reflection;

      // this file is automatically generated by git.version.ts script

      [assembly: AssemblyDescription(@"${branch} ${revision}")]
`;

  writeFileSync(filename2, content2, { encoding: "utf8" });
}

createVersionsFile("src/environments/versions.ts", "../Properties/Version.cs");
